# roles/vms/tasks/main.yaml
---
# Step 1: Clone VMs
- name: Clone template for each node
  community.general.proxmox_kvm:
    api_host: '{{ sops.pm_api_host }}'
    api_user: '{{ sops.pm_api_user }}'
    api_password: '{{ sops.pm_api_password }}'
    node: '{{ sops.pm_node }}'
    clone: '{{ existing_template }}'
    vmid: '{{ existing_template }}'
    newid: '{{ item.id }}'
    name: '{{ item.name }}'
    storage: '{{ storage_pool }}'
  loop: "{{ nodes }}"
  register: cloned_vms

# Step 2: Update VM Configurations
- name: Update VM configurations
  community.general.proxmox_kvm:
    api_host: '{{ sops.pm_api_host }}'
    api_user: '{{ sops.pm_api_user }}'
    api_password: '{{ sops.pm_api_password }}'
    node: '{{ sops.pm_node }}'
    vmid: '{{ item.id }}'
    cores: '{{ item.cpu }}'
    memory: '{{ item.memory }}'
    ciuser: '{{ sops.k3s_ciuser }}'
    cipassword: '{{ sops.k3s_cipassword }}'
    sshkeys: '{{ pubkey }}'
    ipconfig:
      ipconfig0: 'ip={{ base_ip }}.{{ item.ip_last_octet }}/24,gw={{ base_ip }}.1'
    update: true
  loop: "{{ nodes }}"
  when: cloned_vms is success

# Step 3: Start VMs
- name: Start VMs
  community.general.proxmox_kvm:
    api_host: '{{ sops.pm_api_host }}'
    api_user: '{{ sops.pm_api_user }}'
    api_password: '{{ sops.pm_api_password }}'
    node: '{{ sops.pm_node }}'
    vmid: '{{ item.id }}'
    state: started
  loop: "{{ nodes }}"

# Step 4: Wait for VMs
- name: Wait for VMs to be ready
  ansible.builtin.wait_for:
    host: "{{ base_ip }}.{{ item.ip_last_octet }}"
    port: 22
    timeout: 180
  loop: "{{ nodes }}"
